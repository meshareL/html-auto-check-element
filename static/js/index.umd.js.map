{"version":3,"file":"index.umd.js","sources":["../src/xhr-error.ts","../src/index.ts","../src/strict.ts"],"sourcesContent":["'use strict';\r\n\r\nexport default class XHRError extends Error {\r\n    response: Response;\r\n    /**\r\n     * xhrError constructor\r\n     * @param response fetch response\r\n     */\r\n    constructor(response: Response) {\r\n        super();\r\n        this.response = response;\r\n    }\r\n}","'use strict';\r\nimport {debounce} from './strict';\r\nimport XHRError from './xhr-error';\r\n\r\nconst verifying = 'Verifying.....';\r\nconst validationFailed = 'Validation failed';\r\nconst checkFunctions = new WeakMap<HTMLAutoCheckElement, Function>();\r\n/**\r\n * HTML5验证错误类型\r\n * 去除customError与valid键\r\n * @type {string[]}\r\n */\r\nconst errorTypes = [\r\n    'typeMismatch',\r\n    'badInput',\r\n    'valueMissing',\r\n    'tooShort',\r\n    'tooLong',\r\n    'rangeUnderflow',\r\n    'rangeOverflow',\r\n    'stepMismatch',\r\n    'patternMismatch'\r\n];\r\n\r\n/**\r\n * Local validation\r\n *\r\n * @param event Event\r\n */\r\nfunction nativeValidate(event: Event): void {\r\n    const checkElement = event.currentTarget;\r\n    if (!(checkElement instanceof HTMLAutoCheckElement)) return;\r\n\r\n    const input = checkElement.input;\r\n    if (!(input instanceof HTMLInputElement)) return;\r\n\r\n    if (input.validity.customError) {\r\n        input.setCustomValidity('');\r\n    }\r\n\r\n    if (input.checkValidity()) {\r\n        checkElement.dispatchEvent(new CustomEvent(`auto-check:${checkElement.href ? 'native-success' : 'success'}`, {bubbles: true}));\r\n\r\n        if (checkElement.href) {\r\n            const remoteCheckFunction = checkFunctions.get(checkElement);\r\n            if (remoteCheckFunction) {\r\n                const dispatched = checkElement.dispatchEvent(new CustomEvent('auto-check:ajax-start', {bubbles: true, cancelable: true}));\r\n                if (!dispatched) return;\r\n\r\n                input.setCustomValidity(verifying);\r\n                remoteCheckFunction(checkElement);\r\n            }\r\n        }\r\n    } else {\r\n        const message = hintText(input.validity, checkElement);\r\n        if (!message) return;\r\n\r\n        checkElement.dispatchEvent(new CustomEvent('auto-check:error', {detail: {message}, bubbles: true}));\r\n    }\r\n}\r\n\r\n/**\r\n * remote validation\r\n *\r\n * @param checkElement HTMLAutoCheckElement\r\n */\r\nfunction remoteValidate(checkElement: HTMLAutoCheckElement): void {\r\n    const url = checkElement.href\r\n        , input = checkElement.input;\r\n\r\n    if (!url || !input || !input.value.trim()) return;\r\n\r\n    input.setCustomValidity(verifying);\r\n\r\n    const href = `${url.includes('?') ? url : `${url}?`}${new URLSearchParams({[input.name]: input.value.trim()}).toString()}`\r\n        , init: RequestInit = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'same-origin',\r\n        headers: new Headers({'X-Requested-With': 'XMLHttpRequest', 'Accept': 'application/json'})\r\n    };\r\n\r\n    fetch(href, init)\r\n        .then(stream => {\r\n            if (stream.ok) {\r\n                return stream.text();\r\n            } else {\r\n                throw new XHRError(stream);\r\n            }\r\n        })\r\n        .then(() => {\r\n            input.setCustomValidity('');\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:ajax-end', {bubbles: true}));\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:ajax-success', {bubbles: true}));\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:success', {bubbles: true}));\r\n        })\r\n        .catch(async err => {\r\n            const eventInit: CustomEventInit = {bubbles: true, detail: {}};\r\n            if (err instanceof XHRError) {\r\n                try {\r\n                    const res = await err.response.json();\r\n                    eventInit.detail.message = res.message;\r\n                } catch (e) {\r\n                    eventInit.detail.message = validationFailed;\r\n                }\r\n            } else {\r\n                eventInit.detail.message = validationFailed;\r\n            }\r\n            input.setCustomValidity(eventInit.detail.message);\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:ajax-end', {bubbles: true}));\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:ajax-error', eventInit));\r\n            checkElement.dispatchEvent(new CustomEvent('auto-check:error', eventInit));\r\n        });\r\n}\r\n\r\n/**\r\n * error text\r\n *\r\n * @param validityState input validity state\r\n * @param checkElement HTMLAutoCheckElement\r\n * @return text\r\n */\r\nfunction hintText(validityState: ValidityState, checkElement: HTMLAutoCheckElement): string | null {\r\n    let validationMessage = checkElement.msg;\r\n    if (!validationMessage) return null;\r\n\r\n    let obj: {[key: string]: string};\r\n    try {\r\n        const message = JSON.parse(validationMessage);\r\n        if (typeof message === 'object') {\r\n            obj = Object.assign({all: ''}, message);\r\n        } else {\r\n          obj = {all: message};\r\n        }\r\n    } catch (e) {\r\n        obj = {all: validationMessage};\r\n    }\r\n    const type = errorTypes.find(value => Reflect.get(validityState, value)) || 'all';\r\n\r\n    return obj[type];\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass HTMLAutoCheckElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        checkFunctions.set(this, debounce(remoteValidate.bind(this), 500));\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.addEventListener('input', nativeValidate);\r\n\r\n        const input = this.input;\r\n        if (!input) return;\r\n\r\n        input.autocomplete = 'off';\r\n        input.spellcheck = false;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.removeEventListener('input', nativeValidate);\r\n\r\n        checkFunctions.delete(this);\r\n\r\n        const input = this.input;\r\n        if (!input) return;\r\n\r\n        input.setCustomValidity('');\r\n    }\r\n\r\n    get href(): string | null {\r\n        const href = this.getAttribute('href');\r\n        if (!href) return '';\r\n\r\n        const link = this.ownerDocument.createElement('a');\r\n        link.href = href;\r\n        return link.href;\r\n    }\r\n    set href(value: string | null) {\r\n        if (value) {\r\n            this.setAttribute('href', value);\r\n        } else {\r\n            this.removeAttribute('href');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取验证提示信息\r\n     * @returns 提示信息\r\n     */\r\n    get msg(): string | null {\r\n        return this.getAttribute('msg');\r\n    }\r\n    set msg(value: string | null) {\r\n        if (value) {\r\n            this.setAttribute('msg', value);\r\n        } else {\r\n            this.removeAttribute('msg');\r\n        }\r\n    }\r\n\r\n    get input(): HTMLInputElement | null {\r\n        return this.querySelector('input');\r\n    }\r\n}\r\n\r\nif (!window.customElements.get('auto-check')) {\r\n    window.HTMlAutoCheckElement = HTMLAutoCheckElement;\r\n    window.customElements.define('auto-check', HTMLAutoCheckElement);\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        HTMlAutoCheckElement: typeof HTMLAutoCheckElement\r\n    }\r\n}\r\n\r\nexport default HTMLAutoCheckElement;","'use strict';\r\n\r\nfunction debounce(fun: Function, interval = 300) {\r\n    let time = null;\r\n    return function () {\r\n        if (time) {\r\n            window.clearTimeout(time);\r\n            time = null;\r\n        }\r\n        time = window.setTimeout(() => {\r\n            const args = [];\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                args[i] = arguments[i];\r\n            }\r\n            fun.apply(this, args);\r\n        }, interval);\r\n    };\r\n}\r\n\r\nexport { debounce };"],"names":["XHRError","Error","constructor","response","checkFunctions","WeakMap","errorTypes","nativeValidate","event","checkElement","currentTarget","HTMLAutoCheckElement","input","HTMLInputElement","validity","customError","setCustomValidity","checkValidity","dispatchEvent","CustomEvent","href","bubbles","remoteCheckFunction","get","cancelable","message","validityState","obj","validationMessage","msg","JSON","parse","Object","assign","all","e","type","find","value","Reflect","hintText","detail","remoteValidate","url","trim","includes","URLSearchParams","name","toString","init","method","mode","credentials","headers","Headers","fetch","then","stream","ok","text","catch","async","eventInit","err","res","json","HTMLElement","set","this","fun","interval","time","window","clearTimeout","setTimeout","args","i","arguments","length","apply","debounce","bind","connectedCallback","addEventListener","autocomplete","spellcheck","disconnectedCallback","removeEventListener","delete","getAttribute","link","ownerDocument","createElement","setAttribute","removeAttribute","querySelector","customElements","HTMlAutoCheckElement","define"],"mappings":"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"}